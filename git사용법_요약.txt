Git은 분산 버전 관리 시스템으로, 개발자들이 소프트웨어 개발 과정에서 소스 코드를 효과적으로 관리할 수 있는 도구 

-----------------
Git의 주요 사용법
=================
작업할 디렉토리로 이동
chdir [디렉토리명]

Git 저장소 초기화
git init: 현재 디렉토리를 Git 저장소로 초기화
git clone [URL]: 원격 Git 저장소를 로컬 PC에 복제

파일 추가 및 커밋
git add [파일명]: 특정 파일을 Git 추적 대상에 포함시킵니다.
git add .: 현재 디렉토리의 모든 변경된 파일을 추가합니다.
git commit -m "[커밋 메시지]": 변경 사항을 커밋합니다.

브랜치 관리
git branch [브랜치명]: 새로운 브랜치를 생성합니다.
git checkout [브랜치명]: 특정 브랜치로 전환합니다.
git merge [브랜치명]: 특정 브랜치의 변경 사항을 현재 브랜치에 병합합니다.

원격 저장소 관리
git remote add [이름] [URL]: 원격 Git 저장소를 추가합니다.
git push [이름] [브랜치명]: 로컬 브랜치를 원격 저장소에 push합니다.
git pull [이름] [브랜치명]: 원격 저장소의 변경 사항을 로컬에 pull합니다.

로그 및 상태 확인
git status: 현재 Git 저장소의 상태를 확인합니다.
git log: 커밋 내역을 확인합니다.

이 외에도 Git에는 다양한 명령어와 기능이 있습니다. 
개발 프로세스에 맞춰 Git을 효과적으로 활용하는 것이 중요합니다.
